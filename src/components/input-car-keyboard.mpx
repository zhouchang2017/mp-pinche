<template>
    <view class="modal-box">
        <view class="modal-wrapper">
            <view class="modal-title">
                <view class="titleWrapper">
                    <text class="title-text">请录入车牌号</text>
                </view>
                <view class="iconWrapper">
                    x
<!--                    <image class="close-icon" src="../images/close.png" bindtap="onCancel"/>-->
                </view>
            </view>

            <view class="modal-content">
                <view class="modal-input">
                    <block wx:for="{{8}}" wx:key="index">
                        <view data-index="{{index}}" class="input {{selectInputIndex===index?'activeInput':''}}"
                              bindtap='inputCarNum'>
                            <text>{{carNumArr[index] || ''}}</text>
                        </view>
                    </block>
                    <view class="line"></view>
                </view>

            </view>
            <view class="model-btn-group">
                <button bindtap="onOk" class="btn confirm" disabled="{{btnDisabled}}">确认</button>
            </view>
        </view>
        <!-- 车牌 -->
        <view class='keyboard'>
            <!-- 省键盘 -->
            <view class="provinces" hidden='{{hiddenPro}}'>
                <view class="pro-li fl" wx:for="{{provinceArr}}" wx:key="index" catchtap='proTap'
                      data-province="{{item}}">{{item}}
                </view>
            </view>
            <!-- 号码键盘	 -->
            <view class="keyNums" hidden='{{hiddenStr}}'>
                <view wx:if="{{selectInputIndex===1}}" class="row numRow">
                    <view class="pro-li  disabled" wx:for="{{numArr}}" wx:key="index" data-str="{{item}}">{{item}}
                    </view>
                </view>
                <view wx:else class="row numRow">
                    <view class="pro-li " wx:for="{{numArr}}" wx:key="index" catchtap='strTap' data-str="{{item}}">
                        {{item}}
                    </view>
                </view>
                <view class="strOne row">
                    <view class="pro-li " wx:for="{{strArrOne}}" wx:key="index" catchtap='strTap' data-str="{{item}}">
                        {{item}}
                    </view>
                </view>
                <view class="strTwo row">
                    <view class="pro-li " wx:for="{{strArrTwo}}" wx:key="index" catchtap='strTap' data-str="{{item}}">
                        {{item}}
                    </view>
                </view>
                <view class="strThree row">
                    <view class="pro-li " wx:for="{{strArrThree}}" wx:key="index" catchtap='strTap' data-str="{{item}}">
                        {{item}}
                    </view>
                    <view class='kb-icon pro-li' catchtap='backSpace'>
<!--                        <image class='delete-icon' src="../images/delete.png"/>-->
                        x
                    </view>
                </view>
            </view>
        </view>
        <view class="modal-cover"></view>
    </view>
</template>

<script>
  import { createComponent } from '@mpxjs/core'

  const INPUT_NUM = 8//车牌号输入框个数
  const EmptyArray = new Array(INPUT_NUM).fill('')//['','','','','','','','']

  // 车牌输入框的下标
  const INPUT_INDEX = {
    FIRST: 0,
    SECOND: 1
  }

  createComponent({
    data: {
      // 键
      provinceArr: ['京', '沪', '津', '苏', '粤', '冀', '晋', '蒙', '辽', '吉', '黑', '浙', '皖', '闽', '赣', '鲁', '豫', '鄂', '湘',
        '桂', '琼', '渝', '川', '贵', '云', '藏', '陕', '甘', '青', '宁', '新', '港', '澳', '台'],
      strArrOne: ['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'P'],
      strArrTwo: ['A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L'],
      strArrThree: ['Z', 'X', 'C', 'V', 'B', 'N', 'M'],
      numArr: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],
      hiddenPro: false, // 隐藏省份键盘
      hiddenStr: true, // 隐藏数字字母键盘
      carNumArr: EmptyArray,
      selectInputIndex: 0,
      btnDisabled: true
    },
    methods: {
      proTap (e) { //点击省份
        let province = e.currentTarget.dataset.province
        const { carNumArr, selectInputIndex } = this.data
        this.setData({
          hiddenPro: true,
          hiddenStr: false
        })
        carNumArr[selectInputIndex] = province
        // 选择车牌号时触发
        this.setData({
          carNumArr,
          // 选中一个后，下一个输入框聚焦
          selectInputIndex: selectInputIndex !== carNumArr.length - 1 ? selectInputIndex + 1 : selectInputIndex,
          btnDisabled: this.btnDisabled()
        })
      },
      strTap (e) { //点击字母数字
        const str = e.currentTarget.dataset.str
        const { carNumArr, selectInputIndex } = this.data
        carNumArr[selectInputIndex] = str
        this.setData({
          carNumArr,
          // 选中一个后，下一个输入框聚焦
          selectInputIndex: selectInputIndex !== carNumArr.length - 1 ? selectInputIndex + 1 : selectInputIndex,
          btnDisabled: this.btnDisabled()
        })
      },
      inputCarNum (e) {
        const { index } = e.currentTarget.dataset
        this.setData({
          showCarKeyboard: true,
          selectInputIndex: index
        })
        if (index === INPUT_INDEX.FIRST) {
          // 第一个输入框展示省份键盘，第二个展示字母数字输入框(数字不可点),以后就是数字字母输入框(都可点)
          this.setData({
            hiddenPro: false,
            hiddenStr: true
          })
        } else if (index === INPUT_INDEX.SECOND) {
          this.setData({
            hiddenPro: true,
            hiddenStr: false
          })
        } else {
          this.setData({
            hiddenPro: true,
            hiddenStr: false
          })
        }
      },
      backSpace () { //删除
        const { carNumArr, selectInputIndex } = this.data
        carNumArr[selectInputIndex] = ''
        this.setData({
          carNumArr,
          selectInputIndex: selectInputIndex !== INPUT_INDEX.FIRST ? selectInputIndex - 1 : selectInputIndex,
          btnDisabled: this.btnDisabled()
        }, () => {
          if (this.data.selectInputIndex === INPUT_INDEX.FIRST) { //这里必须要用this.data.selectInputIndex，用最新的
            this.setData({
              hiddenPro: false,
              hiddenStr: true
            })
          }
        })
      },
      // 只有输入内容的车牌号位数合法时，展示确认按钮
      btnDisabled () {
        const { carNumArr } = this.data
        const disabled = carNumArr.some((item, index) => {
          if (index !== carNumArr.length - 1) {
            return !item
          }
          return false
        })
        return disabled
      },
      onCancel () {
        this.setData({ carNumArr: EmptyArray })
        this.triggerEvent('onCancel')
      },
      onOk () {
        const carNum = this.data.carNumArr.join('')
        this.triggerEvent('onOk', carNum)
      }
    },

  })
</script>

<script type="application/json" lang="json">
    {
        "component": true
    }
</script>

<style>
    /* 键盘 */
    .keyboard {
        width: 100%;
        position: fixed;
        bottom: 0;
        left: 0;
        z-index: 1000;
        background-color: rgba(210, 213, 219, 90);
    }

    .fl {
        float: left
    }

    .carnum {
        text-align: center;
        height: 88 rpx
    }

    .tel {
        border-bottom: 2 rpx solid #ddd;
        height: 100 rpx;
        line-height: 100 rpx;
    }

    .provinces {
        overflow: hidden;
        padding-top: 20 rpx;
    }

    .pro-li {
        font-size: 32 rpx;
        color: #353535;
        height: 76 rpx;
        width: 62 rpx;
        line-height: 76 rpx;
        text-align: center;
        margin-left: 12 rpx;
        margin-bottom: 20 rpx;
        background-color: #fff;
        box-shadow: 0px 1 rpx 2 rpx 0 #979797;
        border-radius: 5px;
        flex: 1
    }

    .keyNums .disabled {
        background-color: #F7F7F7;
        color: #CCC
    }

    .keyNums {
        overflow: hidden;
        padding-top: 20 rpx;
        display: flex;
        flex-direction: column;
    }

    .keyNums .row {
        display: flex;
    }

    .keyNums .numRow {
        padding: 0 10 rpx;
    }

    .keyNums .strOne {
        padding: 0 10 rpx;
    }

    .keyNums .strOne .strOneItem {
        flex: 1
    }

    .keyNums .strTwo {
        padding: 0 40 rpx;
    }

    .keyNums .strOne .strTwoItem {
        flex: 1
    }

    .keyNums .strThree {
        padding-left: 116 rpx;
        padding-right: 10 rpx;
    }

    .keyNums .strOne .strThreeItem {
        flex: 1
    }

    .keyNums .strOne .strThreeItem:nth-child(7) {
        margin-left: 100px
    }

    .keyNums .pro-li:nth-child(16) {
        color: red
    }

    .keyNums .strThree .kb-del {
        margin-left: 12 rpx
    }

    .keyNums .strThree .kb-icon {
        flex: 1.5;
        background: #ABB3BD;
        margin-left: 40 rpx;
    }

    /* modal样式 */

    .modal-box {
        width: 100%;
        position: absolute;
        top: 0;
        bottom: 0;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .modal-wrapper {
        margin: 30% 30 rpx;
        height: 380 rpx;
        padding: 30 rpx;
        background-color: #fff;
        border-radius: 10 rpx;
        z-index: 300;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        display: flex;
        flex-direction: column;
        align-content: space-between;
        justify-content: space-between;
        overflow: hidden;
        text-align: left;
    }

    .modal-wrapper .model-btn-group {
        display: flex;
        box-sizing: border-box;
        font-size: 32 rpx;
    }

    .model-btn-group view {
        width: 50%;
        text-align: center;
        box-sizing: border-box;
    }

    .model-btn-group .btn {
        flex: 1;
        font-size: 18px
    }

    .model-btn-group .cancel {
        color: #999;
    }

    .model-btn-group .confirm {
        color: #fff;
        background-color: #ff5000;
    }

    .model-btn-group .confirm.active {
        opacity: 1;
    }

    .modal-cover {
        width: 100%;
        background-color: #242424;
        opacity: 0.5;
        z-index: 299;
        position: fixed;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        margin: auto;
        overflow: hidden;
    }

    .modal-input {
        display: flex;
    }

    .modal-input .input {
        border: 1px solid #979797;
        margin-right: 6 rpx;
        border-radius: 3px;
        flex: 1;
        text-align: center;
        padding: 8px;
        height: 22px;
    }

    .modal-input .input:nth-child(1) {
        border-right-width: 0;
        margin-right: 0;
        position: relative;
        border-bottom-right-radius: 0;
        border-top-right-radius: 0;
    }

    .modal-input .input:nth-child(1)::after {
        content: "";
        position: absolute;
        right: -1px;
        width: 1px;
        height: 20px;
        background-color: #979797;
        z-index: -10
    }


    .modal-input .input:nth-child(2) {
        position: relative;
        border-left-width: 0;
        margin-right: 20 rpx;
        border-bottom-left-radius: 0;
        border-top-left-radius: 0;
    }

    .modal-input .input:nth-child(2)::after {
        content: "";
        position: absolute;
        right: -16 rpx;
        top: 45%;
        width: 5px;
        height: 5px;
        border-radius: 50%;
        background-color: #979797
    }

    .modal-input .input:nth-child(8) {
        border: 1px dashed #979797;
    }

    .modal-input .activeInput {
        border-radius: 3px !important;
        border: 1px solid #FF5000 !important
    }

    .modal-input .text {
        text-align: right;
        color: #c5c5c5;
        font-size: 28 rpx;
    }

    .modal-placeholder-class {
        color: #c5c5c5;
    }

    .modal-title {
        display: flex;
        font-size: 20px;
        color: #333333
    }

    .titleWrapper {
        flex: 1;
    }

    .title-text {
        font-size: 18px;
        font-weight: bold;
    }

    .iconWrapper {
        flex: 1;
        text-align: right;
    }

    .close-icon {
        width: 35 rpx;
        height: 35 rpx;
    }

    .delete-icon {
        width: 55 rpx;
        height: 40 rpx;
        margin-top: 18 rpx;
    }

</style>
